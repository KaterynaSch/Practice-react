{"version":3,"file":"static/js/916.83d8b693.chunk.js","mappings":"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","sources":["components/ErrorMessage.js","components/api.js","components/QuizCard/QuizCard.styled.js","components/QuizCard/QuizCard.js","components/QuizList/QuizList.styled.js","components/QuizList/QuizList.js","hooks/useFilters.js","components/TopicFilter.js","components/SearchBar/SearchBar.styled.js","components/LevelFilter.js","components/SearchBar/SearchBar.js","pages/QuizzesPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorMessage = styled.b`\n    color :${p => p.theme.colors.errorColor};\n    font-size: 14px;   \n`","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://65ad1da4adbd5aa31be023a4.mockapi.io/api';\n\nexport const fetchQuizzes = async() => {\n    const response = await axios.get('/quizzes');\n    return response.data;\n};\n\nexport const fetchQuizById = async(quizId) => {\n    const response = await axios.get(`/quizzes/${quizId}`);\n    return response.data;\n};\n\nexport const createQuiz = async(quiz) => {\n    const response = await axios.post('/quizzes', quiz);\n    return response.data;\n};\n\nexport const deleteQuizById = async(quizId) => {\n    const response = await axios.delete(`/quizzes/${quizId}`);\n    return response.data;\n};","import styled from \"styled-components\";\n\nexport const CardWrapper = styled.div`\n  position: relative;\n  padding: ${p => p.theme.spacing(2)};\n  border: 1px solid ${p => p.theme.colors.accentColor};\n  border-radius: ${p => p.theme.radius.m};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`\nexport const Title = styled.h2`\n  color: ${p => p.theme.colors.accentColor};\n`\nexport const ButtonDel = styled.button`\n  position: absolute;\n  top: ${p => p.theme.spacing(2)};\n  right: ${p => p.theme.spacing(2)};   \n  border: 1px solid ${p => p.theme.colors.borderColor};\n  border-radius : ${p => p.theme.radius.l};\n  color: ${p => p.theme.colors.secondaryColor};\n`;\n\nexport const ButtonModal = styled.button`\n  position: absolute;\n  bottom: ${p => p.theme.spacing(2)};\n  right: ${p => p.theme.spacing(2)};   \n  border: 1px solid ${p => p.theme.colors.borderColor};\n  border-radius : ${p => p.theme.radius.m};\n  color: ${p => p.theme.colors.secondaryColor};\n`;","import { BsFillTrash3Fill } from \"react-icons/bs\";\nimport Modal from 'react-modal';\nimport { useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { ButtonDel, ButtonModal, CardWrapper, Title } from \"./QuizCard.styled\";\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n};\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root');\n\nexport const QuizCard = ({quiz: {id, topic, level, time, questions}, onDelete}) => {\n   \n    const location = useLocation();    \n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const openModal = ()=> {\n        setIsModalOpen(true);\n    };\n\n    const closeModal = ()=> {\n        setIsModalOpen(false);\n    };   \n\n    return (\n        <CardWrapper>\n            <Link to={`/quizzes/${id}`} state={{from: location}}>\n                <Title>{topic}</Title> \n            </Link>\n            <ButtonDel onClick={() => onDelete(id)} >                \n                <BsFillTrash3Fill />\n            </ButtonDel>\n            <ButtonModal onClick = {openModal}>Open modal</ButtonModal>\n            <div>\n                <p>Level: {level}</p>\n                <p>Time: {time} min</p>\n                <p>Questions: {questions}</p>\n            </div> \n            <Modal\n                isOpen={isModalOpen}        \n                onRequestClose={closeModal}//дії при намагвнні закрити модалку\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n                >\n                <div>\n                    <Title>{topic}</Title>\n                    <p>Questions: {questions}</p>\n                    <button onClick = {closeModal}>close</button>\n                </div>            \n            </Modal>      \n        </CardWrapper>\n    );   \n};","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: ${p => p.theme.spacing(6)};  \n`","import { QuizCard } from \"components/QuizCard/QuizCard\";\nimport { List } from \"./QuizList.styled\";\n\nexport const QuizList = ({items, onDelete}) => {//<li> повинна бути в списку\n    return (\n        <List>        \n            {items.map(item => ( \n            <li key={item.id}>      \n                <QuizCard quiz={item} onDelete = {onDelete} />\n            </li>\n            ))} \n            \n        </List>\n    );\n};","import { useSearchParams } from \"react-router-dom\";\n\n//сторення кастомного хука, в ньому можна виклкати інші хуки\nexport const useFilters = ()=> {\n    const [params, setParams] = useSearchParams();\n\n    const topic = params.get(\"topic\") ?? \"\"; //читання значень filters\n    const level = params.get(\"level\") ?? \"all\";\n\n    const changeTopic = (evt) => {//можна мутувати, так як це не state\n        params.set('topic', evt.target.value);\n        setParams(params);\n    }; \n    \n    const changeLevel = (evt) => {//можна мутувати, так як це не state\n        params.set('level', evt.target.value);\n        setParams(params);\n    };\n\n    const resetFilters = () => {\n        setParams({topic: \"\", level: \"all\"});\n    };\n\n    return {\n        topic,\n        level,\n        changeTopic,\n        changeLevel, \n        resetFilters\n    };\n};","import { useFilters } from \"hooks/useFilters\";\n\nexport const TopicFilter = () => {\n    \n    const {topic, changeTopic} = useFilters();\n    \n    return(\n        <input \n            type= 'text' value={topic} \n            onChange={changeTopic} \n            placeholder=\"Filter by topic...\"/>\n    );\n};","import styled from \"styled-components\";\n\nexport const SearchWrapper = styled.div`\n  padding: ${p => p.theme.spacing(2)};  \n  display: flex;\n  align-items: center;\n  gap: ${p => p.theme.spacing(2)};\n  border-radius: ${p => p.theme.radius.m};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`\nexport const ButtonReset = styled.button`\n    border: 1px solid ${p => p.theme.colors.borderColor};\n    border-radius: ${p => p.theme.radius.l};\n    color: ${p => p.theme.colors.secondaryColor};\n`;","import { useFilters } from \"hooks/useFilters\";\n\nexport const LevelFilter = () => {\n\n    const {level, changeLevel} = useFilters();   \n\n    return(\n        <select value={level}onChange={changeLevel}>            \n            <option value='all'>All</option>\n            <option value='beginner'>Beginner</option>\n            <option value='intermediate'>Intermediate</option>\n            <option value='advanced'>Advanced</option>\n        </select>\n    );\n};","import { useFilters } from \"hooks/useFilters\";\n\nimport { TopicFilter } from \"components/TopicFilter\";\nimport { ButtonReset, SearchWrapper } from \"./SearchBar.styled\";\nimport { LevelFilter} from \"components/LevelFilter\";\n\nexport const SearchBar = () => {\n\n    const {resetFilters} = useFilters();\n\n    return (\n        <SearchWrapper>\n            <TopicFilter/>\n            <LevelFilter/>            \n            <ButtonReset type=\"button\" onClick={resetFilters}>Reset filters</ButtonReset> \n        </SearchWrapper>\n    );\n};","import { useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\n\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport { QuizList } from \"components/QuizList/QuizList\";\nimport { SearchBar } from \"components/SearchBar/SearchBar\";\nimport { deleteQuizById, fetchQuizzes } from \"components/api\";\nimport { useFilters } from \"hooks/useFilters\";\n\n// ф-ція ініціалізатор стану\n// спрацьовує ще до стадії монтування компонента, до Effect\n// const getInitialFilters = () => {\n//     const savedFilters = localStorage.getItem('quizItems');//читання з LS\n//     if(savedFilters !== null){//якщо не пусто\n//         return JSON.parse(savedFilters);\n//     }\n//     return {topic: '', level: 'all' }\n// }\n\nexport default function QuizzesPage() {\n     const [quizItems, setQuizItems] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    // const [filters, setFilters] = useState(getInitialFilters);\n   \n    const {topic, level} = useFilters();\n\n    // useEffect(() => {//замість componentDidUpdate(filers)//спрацьовує при обновленні стану або пропсів\n    //     localStorage.setItem('quizFilters', JSON.stringify(filters));\n    // }, [filters]);\n\n    useEffect(()=> {//не може бути async, щоб запобігти 'ефекту гонитви'- race conditions\n        async function getQuizzes() {\n            try {\n                setLoading(true);\n                setError(false);\n                const quizzes = await fetchQuizzes();\n                toast.success('We found quizzes')     \n                setQuizItems(quizzes);    \n            } catch (error) {\n                setError(true);\n            } finally {\n                setLoading(false);\n            }\n        }\n        getQuizzes();\n    },[])//порожній, бо в методі немає використання state or props    \n\n    const deleteQuizItem = async quizId=> {\n        try {\n            setLoading(true);\n            setError(false);\n            const deletedQuiz = await deleteQuizById(quizId); \n            setQuizItems(prevState => \n                prevState.filter(quiz => quiz.id !== deletedQuiz.id)     \n            );\n        } catch (error) {\n            setError(true);\n        } finally{\n            setLoading(false);\n        }         \n    };  \n\n    const visibleItems = quizItems.filter(quiz => {\n        const topicFilter = topic.toLowerCase();\n        const hasTopic = quiz.topic.toLowerCase().includes(topicFilter);\n        if(level === 'all'){\n            return hasTopic;\n        }\n        return hasTopic && quiz.level === level;\n    }); \n\n    return (\n        <>\n            <SearchBar />\n            {loading && <b>Loading...</b>} \n            {error && <ErrorMessage>Error! Please reload this page.</ErrorMessage>}\n            {visibleItems.length > 0 && <QuizList items = {visibleItems} onDelete = {deleteQuizItem}/>} \n        </>\n    );\n};"],"names":["ErrorMessage","styled","b","_templateObject","_taggedTemplateLiteral","p","theme","colors","errorColor","axios","defaults","baseURL","fetchQuizzes","async","get","data","fetchQuizById","concat","quizId","createQuiz","post","quiz","deleteQuizById","delete","CardWrapper","div","spacing","accentColor","radius","m","Title","h2","_templateObject2","ButtonDel","button","_templateObject3","borderColor","l","secondaryColor","ButtonModal","_templateObject4","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","QuizCard","_ref","id","topic","level","time","questions","onDelete","location","useLocation","isModalOpen","setIsModalOpen","useState","closeModal","_jsxs","children","_jsx","Link","to","state","from","onClick","BsFillTrash3Fill","openModal","isOpen","onRequestClose","style","contentLabel","List","ul","QuizList","items","map","item","useFilters","_params$get","_params$get2","params","setParams","useSearchParams","changeTopic","evt","set","target","value","changeLevel","resetFilters","TopicFilter","type","onChange","placeholder","SearchWrapper","ButtonReset","LevelFilter","SearchBar","QuizzesPage","quizItems","setQuizItems","loading","setLoading","error","setError","useEffect","quizzes","toast","success","getQuizzes","visibleItems","filter","topicFilter","toLowerCase","hasTopic","includes","_Fragment","length","deletedQuiz","prevState"],"sourceRoot":""}